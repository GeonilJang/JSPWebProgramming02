커넥션 풀

: 데이터베이스와 연결된 커넥션을 미리 만들어서 풀pool 속에 저장해 두고 있다가,
필요할 떄에 커넥션을 가져다 쓰고 다시 풀에 반환하는 기능을 의미한다.

	<사용순서>
	
		1. 풀에서 커넥션을 가져온다.
		2. 커넥션을 사용한다.
		3. 풀에 커넥션을 반납한다.
		
	<특징>
		
		1. 미리 만들어져 있기 떄문에 커넥션을 생성하는 시간이 소비 되지 않는다.
		2. 커넥션을 계속해서 재사용하기 떄문에 생서오디는 커넷션 수가 많지 않다.
		
	-> 커넷션을 생성하고 닫는 시간을 줄일 수 있디 떄문에 그 만큼 어플리케시션의 실행속도가 빨라지는 장점이 있다.
		한 번에 생성할 수 있는 커넥션의 수를 정할 수 있기 때문에 동시에 접속자 수가 몰려도 웹 어플리케이션이 쉽게 다운되지 않는 특징이 있다.
		
	
	< 동시 접속자 처리 방법 >
	
		1. 커넥션 풀에서 생성되어 있는 커넷션의 갯수는 한정적이다. 동시에 접속자 수가 많아지면
		     남아 있는 커넥션이 없기 때문에 클라이언트는 대기 상태로 전환된다. 커넷션이 반환인되면, 대기하고 있는 순새대로 커넥션이 제공된다.
		     
		     
	< 커넥션 풀의 속성 >
		
		1. 커넥션 풀은 여러 속성을 이용하여 설정할 수 있다.
			maxActive : 커넥션 풀이 제공할 수 있는 커넥션의 객수
			whenExhaustedAction : 커넥션 풀에서 가져올 수 있는 커넥션이 없을 때 어떻게 동작할 지를 설정하는 속성
									0일 경우 에러
									1일 경우 maxWait 속성에서 지정한 시간만큼 커넥션을 얻을 떄까지 기다림.
									2일 경우 일시적으로 커넥션을 생성해서 사용
									
			maxWait : whenExhaustedAction :속성의 값이 1일 떄 사용되는 대기시간을 지정.
			         	단위 1/1000초, 0 보다 작을 경우 무한대기.
			
			maxIdle : 사용되지 않고 풀에 저잘될 수 있는 최대 커넥션의 객수. 음수일 경우 제한이 없음.
			minIdle : 사용되지 않고 풀에 저장될 수 있는 최소 커넥션의 객수.
			
			testOnBorrow: true 일 경우 커넥션 풀에서 커넥션을 가져올 때 커넷션의 유효성 여부를 검사
			testOnReturn: true 일 경우 커넥션 풀에 커넥션을 반화할 때 커넥션이 유효한지의 여부를 검사.
			
			
			
			
			
	 ** <커넥션 풀을 사용하기위한 톰캣 컨테이너 설정 방법> **	
	 
	 Servers / context.xml
	 
	 context.xml 파일에 다음과 같은 코드를 추가한다.
	 
	 <Context>
	 	<Resource 
	 		auth="Container" 
	 		driverClassName="oracle.jdbc.driver.OracleDriver" 
	 		url = "jdbc:oracle:thin:@localhost:1521:xe"
	 		username ="scott";
	 		password="1234";
	 		name="jdbc/Oracle11g"
	 		type="javax.sql.DataSource"
	 		maxActive="50"
	 		MaxWait="1000"
	 	 />
	 </Context>
			
					
					
	** java 프로그램에서 db 접속하는 방법 크게 2가지로 분류할 수 있따.
	
	1st. jdbc를 이용하는 방법 
	2nd. WAS.에서 제송하는 Connection Pool을 사용하는 방법 
	
	**********************
		: JDBC 사용하는 방법
		데이터베이스에서 제공하는  db커넥션 클래스를 이용해서 db에 접속하는 방법
		사용자가 직접코드에 아이디와 비밀 번호 ip등을 입력해서 커넥션 객체를 생성하고
		그 커넥션을 오용해서 db를 제어한다.
		
	**********************	
		:WAS가 제공하는 Connection Pool을 사용하는 방법
		사용자(개발자)가 코드에 직접 db에 연결하는 것이 아니라, 연결을 was(톰캣, 제우스. weblogic)가 하고, 사용자는 was가 연결한 커넥션을 이용하는 방법
		 was가 스타트 하면서 동시에 데이터베이 커넥션 객체를 미리생성하고 객발자는 그 객첵를 그냥 가져다 쓰는 것
		 
		 DataSource를 이용하는 방법이 커넥션 풀 방법이다.
		 당연히 아이디와 비밀번호는 필요없다. (WAS가 알아서 한다)
		
		WAS가 만들어 놓은 커넥션은 각각 커넥션마다 이름이 있다.
		
		Context객체를 생성한다.
		lookup메소드를 이용해서 매칭되는 커넥션을 찾는다.
		
		
		DataSource.getConnection()이용해서 커넥션을 확보한다.
		
		
		
		
		
		
		
		
		
		
	
					
									
									
									  
		